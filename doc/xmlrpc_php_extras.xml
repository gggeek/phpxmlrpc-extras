<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet href="docbook-css/driver.css" type="text/css"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
    "http://docbook.org/xml/4.5/docbookx.dtd">
<!--
PHP-XMLRPC Extras User manual
-->
<book lang="en">
  <title>EXTRAS package for the PHP-XMLRPC library</title>

  <subtitle>version 0.5</subtitle>

  <bookinfo>
    <date>25 February 2007</date>

    <author>
      <surname>Gaetano Giunta</surname>
    </author>

    <copyright>
      <year>2006-2023 G. Giunta</year>
    </copyright>

    <legalnotice>
      <para>All rights reserved.</para>

      <para>Redistribution and use in source and binary forms, with or without
      modification, are permitted provided that the following conditions are
      met:</para>

      <para><itemizedlist>
          <listitem>
            <para>Redistributions of source code must retain the above
            copyright notice, this list of conditions and the following
            disclaimer.</para>
          </listitem>

          <listitem>
            <para>Redistributions in binary form must reproduce the above
            copyright notice, this list of conditions and the following
            disclaimer in the documentation and/or other materials provided
            with the distribution.</para>
          </listitem>

          <listitem>
            <para>Neither the name of the "XML-RPC for PHP" nor the names of
            its contributors may be used to endorse or promote products
            derived from this software without specific prior written
            permission.</para>
          </listitem>
        </itemizedlist></para>

      <para>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
      CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
      BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
      FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
      REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
      SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
      TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
      PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
      LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
      NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
      SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</para>
    </legalnotice>
  </bookinfo>

  <chapter>
    <title>Introduction</title>

    <para>This collection of utilities provides many additional features to
    the PHP classes that are part of the PHP-XMLRPC library.</para>

    <para>Although very useful for specific purposes, these files have been
    omitted from the base distribution in order to keep it small and
    focused.</para>

    <para><ulink url="???">PHP-XMLRPC</ulink> is a php library which
    implements the XMLRPC protocol.</para>

    <para>XMLRPC is a format devised by <ulink
    url="http://www.userland.com/">Userland Software</ulink> for achieving
    remote procedure call via XML using HTTP as the transport. XML-RPC has its
    own web site, <ulink
    url="http://www.xmlrpc.com/">www.xmlrpc.com</ulink></para>

    <para>Support for JSON and JSONRPC is part of this distribution.</para>

    <para><ulink url="???">JSON</ulink> is a format devised to ease
    serialization and deserialization of common data types without incurring
    the overhead that is normally associated with XML. It is a subset of the
    Javascript language, and as such it is easily manipulated within web
    browsers.</para>

    <para><ulink url="http://www.jsonrpc.org">JSONRPC</ulink> is a remote
    procedure call protocol that uses HTTP for transport and a json syntax
    extremely similar to the xmlrpc one.</para>
  </chapter>

  <chapter>
    <title>What's new</title>

    <section>
      <title>rev. 0.5</title>

      <para>This is the first release of the library to only support PHP 5.
      The corresponding version of the base library is 3.0.0 beta</para>

      <para>Quite a few changes and bugfixes have been made in the area of json
      support:</para>

      <para>improved: catch exceptions thrown during execution of php
      functions exposed as methods by the jsonrpc server</para>

      <itemizedlist>
        <listitem>
          <para>improved: catch exceptions thrown during execution of php
          functions exposed as methods by the jsonrpc server</para>
        </listitem>

        <listitem>
          <para>fixed: fix bad encoding if same object is encoded twice using
          php_jsonrpc_encode</para>
        </listitem>

        <listitem>
          <para>improved: json_extension_api.php: added json_last_error()
          function and the constants defined in php 5.3.0</para>
        </listitem>

        <listitem>
          <para>improved: allow 'mixed type' jsonrpc servers (see description
          in the xmlrpc server docs)</para>
        </listitem>

        <listitem>
          <para>improved: allow 'phpvals' jsonrpc servers to do type checking
          on incoming requests</para>
        </listitem>

        <listitem>
          <para>fixed: a missing 'new' call when building string vals in
          php_jsonrpc_encode</para>
        </listitem>

        <listitem>
          <para>fixed: encoding of UTF8 chars outside of the BMP</para>
        </listitem>

        <listitem>
          <para>fixed: encoding of '/' chars in jsonrpc when source is in
          UTF8</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>rev. 0.4</title>

      <para><itemizedlist>
          <listitem>
            <para>DOCXMLRPCS got a bugfix for php installs where
            magic_quotes_gpc is set and an option to take advantage of a
            visual editor for xmlrpc values (the editor being part of the
            jsxmlrpc package, it has to be downloaded separately)</para>
          </listitem>

          <listitem>
            <para>the usual lot of bugfixes for JSONRPC: slightly faster
            handling of data which is internally encoded as UTF-8; support for
            booleans, strings, null as valid id in requests and responses;
            correctly add quotes when serializing datetimes; correct handling
            of charset declaration in http headers; switched the declared
            content-type from 'text/plain' to 'application/json' as per the
            proposed rfc; modified json_extension_api.inc to follow php
            445/521 semantics</para>
          </listitem>

          <listitem>
            <para>added in AJAXMLRPC a new server class that takes advantage
            of ths jsxmlrpc lib for the generated javascript code (instead of
            jsolait)</para>
          </listitem>

          <listitem>
            <para>one bugfix in XMLRPC_EXTENSION_API</para>
          </listitem>
        </itemizedlist></para>
    </section>

    <section>
      <title>rev. 0.3</title>

      <para><itemizedlist>
          <listitem>
            <para>This manual was, albeit in complete, added to the
            distribution</para>
          </listitem>

          <listitem>
            <para>a new php file has been included in the JsonRPC package,
            which implements the same API as the PHP native JSON extension: it
            can be used to replace the extension in those situations where
            modifications to the application server are not feasible, such as
            websites on shared hosting etc...</para>
          </listitem>

          <listitem>
            <para>bugfixes in the JsonRPC and ADODB packages</para>
          </listitem>
        </itemizedlist></para>
    </section>

    <section>
      <title>rev. 0.2</title>

      <para>See the <filename>NEWS</filename> file for a detailed list of
      changes in release 0.2</para>
    </section>
  </chapter>

  <chapter>
    <title>System requirements</title>

    <para>The PHPXMLRPC library base package, version 4.5.1 or later, is a
    prerequisite for the extras package.</para>

    <para>A working php setup is of course needed.</para>

    <para>The base library is tested to work with php versions ranging from
    5.4 to 8.1. Please note that not all library features are available for
    every PHP version. The "curl" php extension is needed to support https
    calls. The "json" and "xmlrpc" php extensions do not interfere with the
    operations of either the base library or extras.</para>

    <para>A complete testsuite has not yet been implemented for every
    component that is part of the extras. This prevents complete regression
    tests to be carried out against all php versions. If you encounter any
    quirk, especially with old php installs, please report it on the <ulink
    url="https://github.com/gggeek/phpxmlrpc">project development
    pages</ulink>.</para>
  </chapter>

  <chapter>
    <title>List of modules in the distribution</title>

    <para>The 'extras' library is formed by separate components, grouped
    together for ease of download. The terms 'component' and 'module' are used
    interchangeably within this manual to indicate groups of files that
    provide a particular capability.</para>

    <para>Included modules as of the current release are:</para>

    <para><itemizedlist>
        <listitem>
          <para>AJAX: demo of an ajaxified version of the php-xmlrpc lib:
          supports executing xmlrpc/jsonrpc calls directly from the client
          browser. Needs the excellent jsolait lib from <ulink
          url="http://jsolait.net/">http://jsolait.net/</ulink> (thanks Jan
          Kollhof) or the jsxmlrpc lib.</para>
        </listitem>

        <listitem>
          <para>DOCXMLRPCS: subclass of xmlrpc server that auto-generates HTML
          documentation of exposed services. Easy as a breeze to use, and
          extremely user-friendly (it is used on the main php-xmlrpc website,
          too).</para>
        </listitem>

        <listitem>
          <para>PROXY: subclass of xmlrpc server that can act as remote
          (transparent) xmlrpc proxy to forward calls to a remote server. Can
          either forward any received call or probe the remote server first
          for existing methods.</para>
        </listitem>
      </itemizedlist></para>
  </chapter>

  <chapter>
    <title>Ajax module</title>

    <sect1>
      <title>files</title>

      <para><itemizedlist>
          <listitem>
            <para><filename>axjaxdemo.php</filename>: demo file showcasing
            construction of a complete ajax client/server solution in a single
            php file, based on xmlrpc and jsolait</para>
          </listitem>

          <listitem>
            <para><filename>ajaxdemo2.php</filename>: demo file showcasing
            construction of a complete ajax client/server solution in a single
            php file, based on xmlrpc and jsxmlrpc</para>
          </listitem>

          <listitem>
            <para><filename>ajaxmlrpc.inc</filename>: file containing core
            logic to wrap xmlrpc function calls and exposed methods into js
            objects</para>
          </listitem>

          <listitem>
            <para><filename><filename>sonofajax.php</filename></filename>:
            demo file showcasing construction of a complete ajax client/server
            solution in a single php file, based on jsonrpc</para>
          </listitem>
        </itemizedlist></para>
    </sect1>

    <sect1>
      <title>usage</title>

      <para>To be documented...</para>
    </sect1>
  </chapter>

  <chapter>
    <title>DocXmlRpc module</title>

    <sect1>
      <title>files</title>

      <para><itemizedlist>
          <listitem>
            <para><filename>docxmlrpcs.inc</filename>: contains the class
            extending <classname>xmlrpc_server</classname> with the capability
            to generate html documentation of exposed methods</para>
          </listitem>

          <listitem>
            <para><filename>docxmlrpcs.css</filename>: the stylesheet used by
            defalt by the self-generated html documentation</para>
          </listitem>
        </itemizedlist></para>
    </sect1>

    <sect1>
      <title>usage</title>

      <para>The purpose of this module is to let users have human-readable
      documentation automatically generated for all xmlrpc methods that are
      implemented by a given xmlrpc server.</para>

      <para>The documentation produced will be in HTML format, and it will
      exactly match the information that the xmlrpc_server class makes
      available to clients via usage of the
      <methodname>system.methodHelp</methodname>,
      <methodname>system.methodSignature</methodname> and
      <methodname>system.listMethods</methodname> xmlrpc calls. As an extra
      feature, documentation for single parameters of xmlrpc methods can be
      added. Html forms will be included with every method synopsis
      description page, to help the developer do quick'n'dirty
      debugging.</para>

      <para>The simplest way to make usage of the extra capabilities of this
      module is to take an existing xmlrpc_server and swap the php class used
      with <classname>documenting_xmlrpc_server</classname>:<programlisting>// define the dispatch map describing all of the xmlrpc methods exposed by this server and the php functions that implement them
$dmap = array(
  '' =&gt; array(),
  ...
);

// include the php code implementing the xmlrpc methods
...

// build the server and let it do its job: that's it!
$server = new documenting_xmlrpc_server($dmap);</programlisting></para>

      <para>Since version 0.4, the html forms that are generated by the server
      class can take advantage of the javascript-based visual xmlrpc value
      editor that is part of the jsxmlrpc library (downloadable as a separate
      package from the sourceforge.net project pages), making it even easier
      to invoke the implemented webservices via a browser interface. This
      optional feature can be enabled by setting the
      <varname>editorpath</varname> member of the server:</para>

      <para><programlisting>$s = new documenting_xmlrpc_server($dmap, false);
$s-&gt;editorpath = '../javascript/'; // enable link to js visual editor of content: set this to the directory where it is located
$s-&gt;setdebug(3); // enable maximum debugging level, just in case
$s-&gt;service();</programlisting></para>
    </sect1>
  </chapter>

  <chapter>
    <title>Proxy module</title>

    <sect1>
      <title>files</title>

      <para><itemizedlist>
          <listitem>
            <para><filename>proxyserver.php</filename>: demo of a simple
            xmlrpc service acting as proxy to the webservices of
            phpxmlrpc.sf.net</para>
          </listitem>

          <listitem>
            <para><filename>proxyxmlrpc.inc</filename>: xmlrpc proxy server
            class definition</para>
          </listitem>
        </itemizedlist></para>
    </sect1>

    <sect1>
      <title>usage</title>

      <para>To be documented...</para>
    </sect1>
  </chapter>
</book>
